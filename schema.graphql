type FID @entity {
  id: ID!
  custodyAddr: String! # address
  createdAtBlock: BigInt!
  createdAtTs: BigInt!
}

type FName @entity {
  id: ID!
  fname: String!
  custodyAddr: String! # address
  createdAtBlock: BigInt!
  createdAtTs: BigInt!
  expiryTs: BigInt
}

type User @entity {
  id: ID!
  fid: FID
  fname: FName
}

type Count @entity {
  id: ID!
  count: BigInt
}

type Pool @entity {
  id: ID!
  address: String!
}

type _Schema_
  @fulltext(
    name: "fnameSearch"
    language: simple
    algorithm: rank
    include: [
      { entity: "FName", fields: [{ name: "fname" }, { name: "custodyAddr" }] }
    ]
  )
  @fulltext(
    name: "fnameSearchProximity"
    language: simple
    algorithm: proximityRank
    include: [
      { entity: "FName", fields: [{ name: "fname" }, { name: "custodyAddr" }] }
    ]
  )
  @fulltext(
    name: "fidSearch"
    language: simple
    algorithm: rank
    include: [
      { entity: "FID", fields: [{ name: "id" }, { name: "custodyAddr" }] }
    ]
  )
